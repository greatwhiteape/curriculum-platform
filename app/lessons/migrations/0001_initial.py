# Generated by Django 3.0.5 on 2020-04-05 20:42

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taxonomy', '0001_initial'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('modifiedDate', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('subtitle', models.CharField(blank=True, max_length=300, null=True)),
                ('intro_copy', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Marketing Copy')),
                ('student_intro', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='Copy for the Student Page')),
                ('teachers_guide', models.URLField(blank=True, null=True)),
                ('learning_outcomes', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('teachers_desc', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(help_text='Text to display', required=True))])), ('copy', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('asset', wagtail.snippets.blocks.SnippetChooserBlock('assets.Asset')), ('activity', wagtail.snippets.blocks.SnippetChooserBlock('activity.Activity')), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('embed', wagtail.embeds.blocks.EmbedBlock())], blank=True, null=True)),
                ('students_desc', wagtail.core.fields.StreamField([('title', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(help_text='Text to display', required=True))])), ('copy', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('asset', wagtail.snippets.blocks.SnippetChooserBlock('assets.Asset')), ('activity', wagtail.snippets.blocks.SnippetChooserBlock('activity.Activity')), ('document', wagtail.documents.blocks.DocumentChooserBlock()), ('embed', wagtail.embeds.blocks.EmbedBlock())], blank=True, null=True)),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.Program')),
                ('time_estimate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.TimeEstimate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LessonTopicRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_topic_relationship', to='lessons.Lesson')),
                ('topic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='taxonomy.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='LessonTagRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_tag_relationship', to='lessons.Lesson')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='LessonStandardsRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_standards_relationship', to='lessons.Lesson')),
                ('standard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.Standard')),
            ],
        ),
        migrations.CreateModel(
            name='LessonAudienceRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.Audience')),
                ('lesson', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_audience_relationship', to='lessons.Lesson')),
            ],
        ),
    ]
