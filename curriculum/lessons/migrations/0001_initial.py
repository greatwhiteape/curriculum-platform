# Generated by Django 3.0.4 on 2020-04-02 18:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('wagtailimages', '0001_squashed_0021'),
        ('taxonomy', '0002_auto_20200402_1821'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('createDate', models.DateTimeField(auto_now_add=True)),
                ('modifiedDate', models.DateTimeField(auto_now=True)),
                ('subtitle', models.CharField(blank=True, max_length=300, null=True)),
                ('intro_copy', models.TextField(blank=True, null=True, verbose_name='Marketing Copy')),
                ('student_intro', models.TextField(blank=True, null=True, verbose_name='Copy for the Student Page')),
                ('teachers_guide', models.URLField(blank=True, null=True)),
                ('learning_outcomes', models.TextField(blank=True, null=True)),
                ('lessons_desc', models.TextField(blank=True, null=True, verbose_name='Friendly Description of Lessons')),
                ('audience', models.ManyToManyField(blank=True, to='taxonomy.Audience')),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('program', models.ManyToManyField(blank=True, to='taxonomy.Program')),
                ('standards_alignment', models.ManyToManyField(blank=True, to='taxonomy.Standard')),
                ('tag', models.ManyToManyField(blank=True, to='taxonomy.Tag')),
                ('time_estimate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='taxonomy.TimeEstimate')),
                ('topic', models.ManyToManyField(blank=True, to='taxonomy.Topic')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
